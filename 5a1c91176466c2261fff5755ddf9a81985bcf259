{
  "comments": [
    {
      "key": {
        "uuid": "7a6b29fe_44ed21ef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 27,
      "author": {
        "id": 2046
      },
      "writtenOn": "2016-10-11T09:15:16Z",
      "side": 1,
      "message": "This is counter intuitive, especially as the name of the parent is so similar to the name of the test. Also, single-feature-parent comments do not spell this explicitly enough.\n\nMoreover, single-feature-test can be used for creating features other projects depend on, and users can feature:install them directly. For example here [0] a fairly important feature would not get tested on its own, just because features are not aggregated [1] into a single repo.\n\nI think testing single features is generally more important than testing feature repositories (not sure, maybe repo testing is just as good), it is just src/main/feature/feature.xml preventing us from skipping tests on repos.\n\nTesting twice is just a consequence of the inability of SingleFeatureTest to detect which features were tested already. I do not see a good way to avoid double testing just by tweaking feature parents.\n\n[0] https://git.opendaylight.org/gerrit/#/c/38638/13/common/features/odl-yangtools-yang-parser/pom.xml\n[1] https://git.opendaylight.org/gerrit/#/c/38638/13/common/features/pom.xml",
      "range": {
        "startLine": 26,
        "startChar": 20,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "5a1c91176466c2261fff5755ddf9a81985bcf259",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_64ac9d8d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 27,
      "author": {
        "id": 4540
      },
      "writtenOn": "2016-10-11T09:49:24Z",
      "side": 1,
      "message": "[0] is included in [2], it\u0027s not supposed to be in [1]. [2] does get tested as a result of this change.\n\nI think what we need to ensure is that we test the features that are defined by the projects in their roadmaps. Typically those are the features that are in projects\u0027 feature repositories. (And if they\u0027re not, I\u0027d argue that\u0027s a bug!)\n\nSome projects have feature repositories which take 30 min to run through SingleFeatureTest; I can imagine quite a few developers being rather annoyed if we introduce double testing as a result of this change!\n\n[2] https://git.opendaylight.org/gerrit/#/c/38638/13/common/features/features-yangtools/pom.xml",
      "parentUuid": "7a6b29fe_44ed21ef",
      "range": {
        "startLine": 26,
        "startChar": 20,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "5a1c91176466c2261fff5755ddf9a81985bcf259",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_7f86ea66",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 27,
      "author": {
        "id": 2046
      },
      "writtenOn": "2016-10-11T13:01:59Z",
      "side": 1,
      "message": "Oh, I just assumed that [2] collects old-style features only, and I did not double-check that.\nIs there a reason why [1] cannot act both as a repo definition and as an aggregator for single feature modules?\n\nIf the project layout guide is updated in the sense that single feature poms are always in a subdirectory of the directory where the repo pom is, we can start saying that the repos are public APIs but the single features are implementation details.\n\nThis way Integration/Distribution committers can verify no single feature was added directly, and we can start skipping feature tests for single features.\n\nEven in this case I would like to see comments in single-feature-parent explicitly stating that SingleFeatureTest is skipped on this level by default (we could add a profile which does not skip it, to help with debugging) and that no single feature is to be considered public outside its enclosing repo.",
      "parentUuid": "7a6b29fe_64ac9d8d",
      "range": {
        "startLine": 26,
        "startChar": 20,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "5a1c91176466c2261fff5755ddf9a81985bcf259",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_1f01b639",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 27,
      "author": {
        "id": 4540
      },
      "writtenOn": "2016-10-11T14:49:21Z",
      "side": 1,
      "message": "We can\u0027t combine aggregators and repositories because they\u0027re different packaging types: pom for the former, feature for the latter. I\u0027ll update the comments in single-feature-parent!",
      "parentUuid": "7a6b29fe_7f86ea66",
      "range": {
        "startLine": 26,
        "startChar": 20,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "5a1c91176466c2261fff5755ddf9a81985bcf259",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_d03a8be6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 27,
      "author": {
        "id": 2046
      },
      "writtenOn": "2016-10-12T10:33:05Z",
      "side": 1,
      "message": "Yup. When I tried, I got \"Aggregator projects require \u0027pom\u0027 as packaging.\".\nNot sure what is the reasoning behind that, but it is what it is.",
      "parentUuid": "7a6b29fe_1f01b639",
      "range": {
        "startLine": 26,
        "startChar": 20,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "5a1c91176466c2261fff5755ddf9a81985bcf259",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}