<?xml version="1.0" encoding="UTF-8"?>
<!-- vi: set et smarttab sw=4 tabstop=4: -->
<!--
 Copyright (c) 2016 Red Hat, Inc. and others. All rights reserved.

 This program and the accompanying materials are made available under the
 terms of the Eclipse Public License v1.0 which accompanies this distribution,
 and is available at http://www.eclipse.org/legal/epl-v10.html
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.opendaylight.odlparent</groupId>
    <artifactId>bundle-parent</artifactId>
    <version>1.9.0-SNAPSHOT</version>
    <relativePath>../bundle-parent</relativePath>
  </parent>

  <artifactId>bundles4-test</artifactId>
  <packaging>bundle</packaging>
  <name>ODL :: odlparent :: ${project.artifactId}</name>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>bundles-test-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.bundle</groupId>
      <artifactId>org.apache.karaf.bundle.core</artifactId>
      <version>${karaf4.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <groupId>cglib</groupId>
          <artifactId>cglib-nodep</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.objenesis</groupId>
          <artifactId>objenesis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- BEWARE of adding additional dependencies here...
         It will cause weird issues e.g. in integration/distribution/features/repos/distribution -->
    <dependency>
      <groupId>com.google.truth</groupId>
      <artifactId>truth</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <configuration>
            <instructions>
              <Embed-Dependency>*;scope=compile</Embed-Dependency>
              <Embed-Transitive>true</Embed-Transitive>
              <Import-Package>!net.sf.cglib.proxy,!org.objenesis,*</Import-Package>
            </instructions>
          </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <propertyExpansion>checkstyle.violationSeverity=error</propertyExpansion>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <configuration>
          <failOnError>true</failOnError>
        </configuration>
      </plugin>
      <plugin>
       <groupId>org.apache.aries.blueprint</groupId>
       <artifactId>blueprint-maven-plugin</artifactId>
      </plugin>
      <!-- The following is needed so that this bundle can be used and tested e.g. in infrautils without relying on controller's blueprint extensions -->
      <!-- TODO Remove again once https://git.opendaylight.org/gerrit/#/c/54885/ is merged -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>move-autowire-test</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <skip>true</skip>
            </configuration>
          </execution>
          <execution>
            <id>move-autowire-test_c54885</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
                <if>
                  <available file="${project.basedir}/src/main/resources/org/opendaylight/blueprint" type="dir"/>
                  <then>
                    <echo>Moving autowire.xml to org/opendaylight/blueprint</echo>
                    <move file="${project.build.directory}/generated-resources/OSGI-INF/blueprint/autowire.xml"
                          todir="${project.build.directory}/generated-resources/org/opendaylight/blueprint"
                          failonerror="false" quiet="true" />
                  </then>
                  <else>
                    <echo>NOT moving autowire.xml (to org/opendaylight/blueprint)</echo>
                  </else>
                </if>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>move-autowire-package</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <skip>true</skip>
            </configuration>
          </execution>
          <execution>
            <id>move-autowire-package_c54885</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
                <if>
                  <available file="${project.basedir}/src/main/resources/org/opendaylight/blueprint" type="dir"/>
                  <then>
                    <echo>Moving autowire.xml to org/opendaylight/blueprint</echo>
                    <move file="${project.build.directory}/generated-resources/OSGI-INF/blueprint/autowire.xml"
                          todir="${project.build.directory}/generated-resources/org/opendaylight/blueprint"
                          failonerror="false" quiet="true" />
                  </then>
                  <else>
                    <echo>NOT moving autowire.xml (to org/opendaylight/blueprint)</echo>
                  </else>
                </if>
              </target>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
            <version>1.0b3</version>
            <exclusions>
              <exclusion>
                <groupId>ant</groupId>
                <artifactId>ant</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
          <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-nodeps</artifactId>
            <version>1.8.1</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>

  <!--
    Maven Site Configuration

    The following configuration is necessary for maven-site-plugin to
    correctly identify the correct deployment path for OpenDaylight Maven
    sites.
  -->
  <url>${odl.site.url}/${project.groupId}/${stream}/${project.artifactId}/</url>

  <distributionManagement>
    <site>
      <id>opendaylight-site</id>
      <url>${nexus.site.url}/${project.artifactId}/</url>
    </site>
  </distributionManagement>

</project>
