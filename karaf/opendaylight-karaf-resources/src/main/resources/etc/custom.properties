# Extra packages to import from the boot class loader
org.osgi.framework.system.packages.extra=org.apache.karaf.branding,sun.reflect,sun.reflect.misc,sun.misc,sun.nio.ch,com.sun.media.sound,sun.net,sun.security.x509,com.sun.management

# https://bugs.eclipse.org/bugs/show_bug.cgi?id=325578
# Extend the framework to avoid the resources to be presented with
# a URL of type bundleresource: but to be presented as file:
osgi.hook.configurators.include=org.eclipse.virgo.kernel.equinox.extensions.hooks.ExtensionsHookConfigurator

# Embedded Tomcat configuration File
org.eclipse.gemini.web.tomcat.config.path=configuration/tomcat-server.xml
org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true

# Use Equinox as default OSGi Framework Implementation
karaf.framework=equinox

# JDK16 osgi.ee version
# FIXME: remove this when karaf has it built-in
eecap-16 = osgi.ee; osgi.ee="OSGi/Minimum"; version:List<Version>="1.0,1.1,1.2", \
 osgi.ee; osgi.ee="JavaSE"; version:List<Version>="1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,9.0,10.0,11.0,13.0,14.0,15.0,16.0", \
 osgi.ee; osgi.ee="JRE"; version:List<Version>="1.0,1.1", \
 osgi.ee; osgi.ee="JavaSE/compact1"; version:List<Version>="1.8,9.0,10.0,11.0,13.0,14.0,15.0,16.0", \
 osgi.ee; osgi.ee="JavaSE/compact2"; version:List<Version>="1.8,9.0,10.0,11.0,13.0,14.0,15.0,16.0", \
 osgi.ee; osgi.ee="JavaSE/compact3"; version:List<Version>="1.8,9.0,10.0,11.0,13.0,14.0,15.0,16.0"

# Show a progress bar on startup and start the console when all bundles are up and running.
# (If you are in a hurry you can still type enter to start the shell faster.)
karaf.delay.console=true

# Set security provider to BouncyCastle
org.apache.karaf.security.providers = org.bouncycastle.jce.provider.BouncyCastleProvider

# Container configuration
container.profile = Container

# Connection manager configuration
connection.scheme = ANY_CONTROLLER_ONE_MASTER

# TLS configuration
# To enable TLS, set secureChannelEnabled=true and specify the location of controller Java KeyStore and TrustStore files.
# The Java KeyStore contains controller's private key and certificate. The Java TrustStore contains the trusted certificate
# entries, including switches' Certification Authority (CA) certificates. For example,
# secureChannelEnabled=true
# controllerKeyStore=./configuration/ctlKeyStore
# controllerKeyStorePassword=xxxxxxxx (this password should match the password used for KeyStore generation and at least 6 characters)
# controllerTrustStore=./configuration/ctlTrustStore
# controllerTrustStorePassword=xxxxxxxx (this password should match the password used for TrustStore generation and at least 6 characters)

secureChannelEnabled=false
controllerKeyStore=
controllerKeyStorePassword=
controllerTrustStore=
controllerTrustStorePassword=

# User Manager configurations
enableStrongPasswordCheck = false

#Jolokia configurations
#org.jolokia.listenForHttpService=false

# Logging configuration for Tomcat-JUL logging
java.util.logging.config.file=configuration/tomcat-logging.properties

#Hosttracker hostsdb key scheme setting
hosttracker.keyscheme=IP

# LISP Flow Mapping configuration
# Enable merging RLOC sets received from different xTR-IDs for the same EID (default: false)
lisp.mappingMerge = false
# Enable the Solicit-Map-Request (SMR) mechanism (default: true)
lisp.smr = true
# Choose policy for Explicit Locator Path (ELP) handling
# There are three options:
#   default: don't add or remove locator records, return mapping as-is
#   both: keep the ELP, but add the next hop as a standalone non-LCAF locator with a lower priority
#   replace: remove the ELP, add the next hop as a standalone non-LCAF locator
lisp.elpPolicy = default

