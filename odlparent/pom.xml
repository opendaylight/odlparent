<?xml version="1.0" encoding="UTF-8"?>
<!-- vi: set et smarttab sw=2 tabstop=2: -->
<!--
 Copyright (c) 2013 Cisco Systems, Inc. and others.  All rights reserved.

 This program and the accompanying materials are made available under the
 terms of the Eclipse Public License v1.0 which accompanies this distribution,
 and is available at http://www.eclipse.org/legal/epl-v10.html
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.opendaylight.odlparent</groupId>
    <artifactId>odlparent-lite</artifactId>
    <version>14.1.4-SNAPSHOT</version>
    <relativePath>../odlparent-lite/pom.xml</relativePath>
  </parent>

  <artifactId>odlparent</artifactId>
  <packaging>pom</packaging>
  <name>ODL :: odlparent :: ${project.artifactId}</name>

  <scm>
    <connection>scm:git:ssh://git.opendaylight.org:29418/odlparent.git</connection>
    <developerConnection>scm:git:ssh://git.opendaylight.org:29418/odlparent.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://wiki.opendaylight.org/display/ODL/ODL+Root+Parent</url>
  </scm>

  <!-- Variables should only be used where genuinely useful (to avoid
       repetition); in general versions should be specified in the
       corresponding dependencyManagement or pluginManagement element, not as
       a variable. Duplication within odlparent doesn't count if it can be
       managed using maven-versions-plugin. -->
  <properties>
    <nexus.repository.release>opendaylight.release</nexus.repository.release>
    <nexus.repository.snapshot>opendaylight.snapshot</nexus.repository.snapshot>

    <!-- Used in controller, genius, infrautils, netconf, netvirt, ovsdb, serviceutils -->
    <karaf.version>4.4.8</karaf.version>

    <!-- Supporting Libraries -->
    <!-- Only used internally -->
    <bouncycastle.version>1.82</bouncycastle.version>

    <!-- JaCoCo configuration, by default tied to Sonar configuration, but can be overridden separately
         to allow projects to report Sonar values from the entire project. -->
    <jacoco.destFile>${project.build.directory}/code-coverage/jacoco.exec</jacoco.destFile>
    <jacoco.dataFile>${jacoco.destFile}</jacoco.dataFile>

    <!-- Default Sonar configuration -->
    <sonar.java.source>${maven.compiler.release}</sonar.java.source>
    <sonar-jacoco-listeners.version>5.14.0.18788</sonar-jacoco-listeners.version>
    <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>

    <!-- Note: This list should match jacoco-maven-plugin's exclusion list below -->
    <sonar.exclusions>**/gen/**,**/generated-sources/**,**/generated-test-sources/**,**/yang-gen/**,**/yang-gen-config/**,**/yang-gen-sal/**,**/yang-gen-code/**,**/pax/**</sonar.exclusions>

    <!-- Opt-in code quality checks -->
    <duplicate-finder.skip>true</duplicate-finder.skip> <!-- Classpath duplicates -->

    <!-- Redirect test output to files (overridable) -->
    <maven.test.redirectTestOutputToFile>true</maven.test.redirectTestOutputToFile>

    <!-- Opt-out from maven-checkstyle-plugin failing the build on violations. Defaults
         to true. Set to 'false' in pom.xml of project which desires to not enforce
         no reported violations. -->
    <odlparent.checkstyle.enforce>true</odlparent.checkstyle.enforce>

    <!-- Opt-in into modernizer-maven-plugin failing the build on violations. Defaults
         to true. Set to 'false' in pom.xml of project which desires to not enforce
         no reported violations. -->
    <odlparent.modernizer.enforce>true</odlparent.modernizer.enforce>

    <!-- Target release for modernizer-maven-plugin. It defaults to '1.11',
         meaning Java 11, but can be set to any version in pom.xml of project
         which desires to override it (such as '1.12' for Java 12). -->
    <odlparent.modernizer.target>1.21</odlparent.modernizer.target>

    <!-- Opt-out from spotbugs-maven-plugin failing the build on violations. Defaults
         to true. Set to 'false' in pom.xml of project which desires to not enforce
         no reported violations. -->
    <odlparent.spotbugs.enforce>true</odlparent.spotbugs.enforce>
    <!-- Use a seaprate JVM for SpotBugs execution, as it seems to have problems in
         parallel builds -->
    <spotbugs.fork>true</spotbugs.fork>

    <!-- Opt-in into maven-dependency-plugin dependency declaration consistency
         enforcement. Defaults to false. Set to 'true' in pom.xml of a project which
         desires to have the consistency of its dependencies checked and enforced. -->
    <odlparent.dependency.enforce>false</odlparent.dependency.enforce>

    <!-- Opt-out from maven-dependency-plugin dependency declaration consistency
         checking. Defaults to false. Set to 'true' in pom.xml of a project which
         desires to not check the consistency of its dependencies. -->
    <odlparent.dependency.skip>false</odlparent.dependency.skip>
  </properties>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>org.opendaylight.odlparent</groupId>
        <artifactId>odlparent-artifacts</artifactId>
        <version>14.1.4-SNAPSHOT</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <!-- We import the Karaf BOM to ensure we converge by default on the versions used there -->
      <dependency>
        <groupId>org.apache.karaf</groupId>
        <artifactId>karaf-bom</artifactId>
        <version>${karaf.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <!-- Build tool dependencies (normally not here in <dependencies>,
           but in a <dependency> in <pluginManagement> but for Checkstyle this
           is required so that we can share the same version of Checkstyle
           for both the Maven plugin below as well as  for custom Checkstyle
           check rule projects, such as yangtools' checkstyle-logging) -->
      <dependency>
        <groupId>com.puppycrawl.tools</groupId>
        <artifactId>checkstyle</artifactId>
        <!-- This should match the plugin management on maven-checkstyle-plugin below -->
        <version>11.1.0</version>
      </dependency>

      <!-- Testing Dependencies -->
      <!-- JUnit, Hamcrest and Mockito need to be kept in sync -->
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.14.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-bom</artifactId>
        <version>5.20.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <!-- When bumping this version, remember to also change the JavaDoc link in odlparent-lite -->
        <version>4.13.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest</artifactId>
        <!-- When bumping this version, remember to also change the JavaDoc link in odlparent-lite -->
        <version>3.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>3.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-library</artifactId>
        <version>3.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>4.3.0</version>
        <scope>test</scope>
      </dependency>

      <!--
           Annotation Processors
       -->
      <dependency>
        <!-- Generates immutable implementations, builders, the works -->
        <groupId>org.immutables</groupId>
        <artifactId>value</artifactId>
        <classifier>annotations</classifier>
        <!-- Keep this version in sync with annotationProcessorPaths declaration below -->
        <version>2.11.4</version>
        <optional>true</optional>
      </dependency>

      <dependency>
        <!-- Generates META-INF/services entries for ServiceLoader -->
        <groupId>org.kohsuke.metainf-services</groupId>
        <artifactId>metainf-services</artifactId>
        <!-- Keep this version in sync with annotationProcessorPaths declaration below -->
        <version>1.11</version>
        <optional>true</optional>
        <scope>provided</scope>
      </dependency>

      <!--
           Supporting Libraries
      -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-bom</artifactId>
        <version>2.0.12</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>1.5.18</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.5.18</version>
      </dependency>

      <!-- log4j2 -->
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-bom</artifactId>
        <version>2.24.3</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <!-- When bumping this version, remember to also change the JavaDoc link in odlparent-lite and docs -->
        <version>33.5.0-jre</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava-testlib</artifactId>
        <!-- When bumping this version, remember to also change the JavaDoc link in odlparent-lite and docs -->
        <version>33.5.0-jre</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker-qual</artifactId>
        <version>3.51.0</version>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>2.42.0</version>
      </dependency>

      <dependency>
        <groupId>commons-beanutils</groupId>
        <artifactId>commons-beanutils</artifactId>
        <version>1.11.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.18.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-text</artifactId>
        <version>1.14.0</version>
      </dependency>

      <!-- Jersey for JAXRS -->
      <dependency>
        <groupId>jakarta.ws.rs</groupId>
        <artifactId>jakarta.ws.rs-api</artifactId>
        <version>2.1.6</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.hk2</groupId>
        <artifactId>hk2-bom</artifactId>
        <version>2.6.1</version>
        <type>pom</type>
        <scope>import</scope>
        <exclusions>
          <exclusion>
            <groupId>org.glassfish.hk2.external</groupId>
            <artifactId>jakarta.inject</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm-analysis</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm-commons</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm-tree</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm-util</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey</groupId>
        <artifactId>jersey-bom</artifactId>
        <version>2.47</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>xml-apis</groupId>
        <artifactId>xml-apis</artifactId>
        <version>1.4.01</version>
      </dependency>

      <!-- Plugin integration -->
      <dependency>
        <groupId>net.java.dev.stax-utils</groupId>
        <artifactId>stax-utils</artifactId>
        <version>20070216</version>
        <exclusions>
          <exclusion>
            <!-- JSR173 ships with JRE by default -->
            <groupId>com.bea.xml</groupId>
            <artifactId>jsr173-ri</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.sonatype.plexus</groupId>
        <artifactId>plexus-build-api</artifactId>
        <version>0.0.7</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-slf4j-logging</artifactId>
        <version>1.1</version>
      </dependency>

      <!-- These three need to be consistent:
        jackson-2.19.2 needs woodstox-6.6.0+
        woodstox-5.3+ needs stax2-api-4.2.x
        -->
      <dependency>
        <groupId>org.codehaus.woodstox</groupId>
        <artifactId>stax2-api</artifactId>
        <version>4.2.2</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.woodstox</groupId>
        <artifactId>woodstox-core</artifactId>
        <version>7.1.1</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>2.19.2</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-annotations</artifactId>
        <version>4.8.6</version>
        <!-- Contains retention=RUNTIME annotations, which are not really needed -->
        <optional>true</optional>
        <exclusions>
          <exclusion>
            <!-- Do not leak JSR305 onto the classpath by default -->
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.eclipse.jdt</groupId>
        <artifactId>org.eclipse.jdt.annotation</artifactId>
        <version>2.3.100</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.13.2</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.20.0</version>
      </dependency>

      <!-- Netty -->
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-bom</artifactId>
        <!-- When bumping this version, remember to also change the JavaDoc link in odlparent-lite -->
        <version>4.2.6.Final</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcpkix-jdk18on</artifactId>
        <version>${bouncycastle.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk18on</artifactId>
        <version>${bouncycastle.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcutil-jdk18on</artifactId>
        <version>${bouncycastle.version}</version>
      </dependency>

      <dependency>
        <groupId>org.javassist</groupId>
        <artifactId>javassist</artifactId>
        <version>3.30.2-GA</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.spec.javax.transaction</groupId>
        <artifactId>jboss-transaction-api_1.1_spec</artifactId>
        <version>1.0.1.Final</version>
      </dependency>
      <dependency>
        <groupId>org.jolokia</groupId>
        <artifactId>jolokia-osgi</artifactId>
        <version>1.7.2</version>
      </dependency>

      <!-- OSGi Release 8 artifacts we support, augmenting Karaf's BOM -->
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.annotation.bundle</artifactId>
        <version>1.1.0</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.annotation.versioning</artifactId>
        <version>1.1.2</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.framework</artifactId>
        <version>1.10.0</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.service.component.annotations</artifactId>
        <version>1.5.1</version>
        <scope>provided</scope>
        <exclusions>
          <!-- Causes class path duplicates -->
          <exclusion>
            <groupId>org.osgi</groupId>
            <artifactId>osgi.annotation</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.service.http.whiteboard</artifactId>
        <version>1.1.1</version>
        <scope>provided</scope>
        <exclusions>
          <!-- Causes class path duplicates -->
          <exclusion>
            <groupId>org.osgi</groupId>
            <artifactId>osgi.annotation</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.service.jdbc</artifactId>
        <version>1.1.0</version>
        <scope>provided</scope>
        <exclusions>
          <!-- Causes class path duplicates -->
          <exclusion>
            <groupId>org.osgi</groupId>
            <artifactId>osgi.annotation</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.service.metatype.annotations</artifactId>
        <version>1.4.1</version>
        <scope>provided</scope>
        <exclusions>
          <!-- Causes class path duplicates -->
          <exclusion>
            <groupId>org.osgi</groupId>
            <artifactId>osgi.annotation</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.service.resolver</artifactId>
        <version>1.1.1</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.service.url</artifactId>
        <version>1.0.1</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.util.tracker</artifactId>
        <version>1.5.4</version>
        <scope>provided</scope>
      </dependency>

      <!-- for https://jira.opendaylight.org/browse/ODLPARENT-24 -->
      <dependency>
        <groupId>org.apache.aries.quiesce</groupId>
        <artifactId>org.apache.aries.quiesce.api</artifactId>
        <version>1.0.0</version>
      </dependency>

      <!-- Add Pax Exam -->
      <dependency>
        <groupId>org.ops4j.pax.exam</groupId>
        <artifactId>pax-exam</artifactId>
        <version>4.14.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.ops4j.pax.exam</groupId>
        <artifactId>pax-exam-container-forked</artifactId>
        <version>4.14.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.ops4j.pax.exam</groupId>
        <artifactId>pax-exam-container-karaf</artifactId>
        <version>4.14.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.ops4j.pax.exam</groupId>
        <artifactId>pax-exam-container-native</artifactId>
        <version>4.14.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.ops4j.pax.exam</groupId>
        <artifactId>pax-exam-extender-service</artifactId>
        <version>4.14.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.ops4j.pax.exam</groupId>
        <artifactId>pax-exam-inject</artifactId>
        <version>4.14.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.ops4j.pax.exam</groupId>
        <artifactId>pax-exam-invoker-junit</artifactId>
        <version>4.14.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.ops4j.pax.exam</groupId>
        <artifactId>pax-exam-features</artifactId>
        <version>4.14.0</version>
        <type>xml</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.ops4j.pax.exam</groupId>
        <artifactId>pax-exam-junit4</artifactId>
        <version>4.14.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.ops4j.pax.exam</groupId>
        <artifactId>pax-exam-link-mvn</artifactId>
        <version>4.14.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.ops4j.pax.exam</groupId>
        <artifactId>pax-exam-link-assembly</artifactId>
        <version>4.14.0</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.ops4j.pax.url</groupId>
        <artifactId>pax-url-link</artifactId>
        <version>2.6.17</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.ops4j.pax.url</groupId>
        <artifactId>pax-url-aether</artifactId>
        <version>2.6.17</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.ops4j.pax.url</groupId>
        <artifactId>pax-url-wrap</artifactId>
        <version>2.6.17</version>
      </dependency>

      <dependency>
        <groupId>org.xmlunit</groupId>
        <artifactId>xmlunit-core</artifactId>
        <version>2.10.4</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.xmlunit</groupId>
        <artifactId>xmlunit-assertj</artifactId>
        <version>2.10.4</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.xmlunit</groupId>
        <artifactId>xmlunit-assertj3</artifactId>
        <version>2.10.4</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.xmlunit</groupId>
        <artifactId>xmlunit-matchers</artifactId>
        <version>2.10.4</version>
        <scope>test</scope>
      </dependency>
      <!-- FIXME: remove this once we have migrated over -->
      <dependency>
        <groupId>org.xmlunit</groupId>
        <artifactId>xmlunit-legacy</artifactId>
        <version>2.10.4</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>3.27.5</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-guava</artifactId>
        <version>3.27.5</version>
        <scope>test</scope>
      </dependency>

      <!-- Annotations for modernizer-maven-plugin -->
      <dependency>
        <groupId>org.gaul</groupId>
        <artifactId>modernizer-maven-annotations</artifactId>
        <!-- This should match the plugin version below -->
        <version>3.2.0</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-bom</artifactId>
        <version>9.4.57.v20241219</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <!-- Annotations -->
      <!-- A better alternative for javax.inject, from https://guicedee.com/ -->
      <dependency>
        <groupId>com.guicedee.services</groupId>
        <artifactId>javax.inject</artifactId>
        <version>1.0.20.2</version>
        <scope>provided</scope>
        <optional>true</optional>
      </dependency>

      <!-- Argparse4j, for parsing command-line arguments in standalone executables -->
      <dependency>
        <groupId>net.sourceforge.argparse4j</groupId>
        <artifactId>argparse4j</artifactId>
        <version>0.9.0</version>
      </dependency>

      <!-- ThreeTen-Extra, date/time complements -->
      <dependency>
        <groupId>org.threeten</groupId>
        <artifactId>threeten-extra</artifactId>
        <version>1.8.0</version>
      </dependency>

      <!-- When updating this version, consider antl4-maven-plugin below -->
      <dependency>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-runtime</artifactId>
        <version>4.13.2</version>
      </dependency>

      <!-- TrieMap library -->
      <dependency>
        <groupId>tech.pantheon.triemap</groupId>
        <artifactId>bom</artifactId>
        <version>1.3.2</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <!-- Dropwizard metrics -->
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-bom</artifactId>
        <version>4.2.37</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <!-- Sonar/JaCoCo integration -->
      <dependency>
        <groupId>org.sonarsource.java</groupId>
        <artifactId>sonar-jacoco-listeners</artifactId>
        <version>${sonar-jacoco-listeners.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!--
         We expect slf4j-api to be provided by the platform.
         Karaf provides it, other containers need to provide it themselves.
    -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!--
          Testing output should be routed through slf4j-simple.
    -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>

    <!--
        Unit tests can use JUnit + Mockito + Hamcrest/AssertJ by default.
    -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Hamcrest, for now -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- This dependency needs to come before junit until we upgrade to JUnit 5. -->
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- JUnit 5 integration -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- JUnit 4 integration -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-migrationsupport</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Official maven plugins, alpha-sorted by artifactId.
             We do not need to specify the groupId. -->
        <plugin>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.6.0</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <!-- This should match the dependency management on com.puppycrawl.tools:checkstyle above -->
              <version>11.1.0</version>
            </dependency>
            <dependency>
              <groupId>org.opendaylight.odlparent</groupId>
              <artifactId>checkstyle</artifactId>
              <version>14.1.4-SNAPSHOT</version>
            </dependency>
            <dependency>
              <groupId>com.github.sevntu-checkstyle</groupId>
              <artifactId>sevntu-checks</artifactId>
              <version>1.44.1</version>
            </dependency>
          </dependencies>
          <configuration>
            <configLocation>odl_checks.xml</configLocation>
            <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
            <!-- <sourceDirectories> are needed so that checkstyle ignores the
                 generated sources directory -->
            <sourceDirectories>
              <directory>${project.build.sourceDirectory}</directory>
            </sourceDirectories>
            <includeResources>true</includeResources>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
            <includeTestResources>true</includeTestResources>
            <includes>**\/*.java</includes>
            <excludes>
              org/opendaylight/yang/gen/**,
              **/protobuff/messages/**,
              **/thrift/gen/*.java,
              **/module-info.java
            </excludes>
            <failsOnError>false</failsOnError>
            <consoleOutput>true</consoleOutput>
          </configuration>
          <executions>
            <execution>
              <id>check-license</id>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>process-sources</phase>
              <configuration>
                <configLocation>check-license.xml</configLocation>
                <headerLocation>EPL-LICENSE.regexp.txt</headerLocation>
                <includeResources>false</includeResources>
                <includeTestSourceDirectory>true</includeTestSourceDirectory>
                <includeTestResources>false</includeTestResources>
                <sourceDirectories>
                  <directory>${project.build.sourceDirectory}</directory>
                </sourceDirectories>
                <excludes>
                  org/opendaylight/yang/gen/**,
                  **/protobuff/messages/**,
                  **/thrift/gen/*.java
                </excludes>
                <failsOnError>false</failsOnError>
                <consoleOutput>true</consoleOutput>
              </configuration>
            </execution>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>process-sources</phase>
              <configuration>
                <failOnViolation>${odlparent.checkstyle.enforce}</failOnViolation>
                <skip>${odlparent.checkstyle.skip}</skip>
                <propertyExpansion>checkstyle.violationSeverity=error</propertyExpansion>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <compilerArgs>
              <arg>-parameters</arg>
              <arg>-Xlint:all</arg>
              <!-- Disable 'No processor claimed any of these annotations' -->
              <arg>-Xlint:-processing</arg>
              <!-- Disable 'declares no explicit constructors, thereby exposing a default constructor'
                   because it causes a lot of warnings in downstreams. -->
              <arg>-Xlint:-missing-explicit-ctor</arg>
            </compilerArgs>
            <annotationProcessorPaths>
              <dependency>
                <groupId>org.immutables</groupId>
                <artifactId>value</artifactId>
                <!-- Keep this version in sync with dependency declaration above -->
                <version>2.11.4</version>
              </dependency>
              <dependency>
                <groupId>org.kohsuke.metainf-services</groupId>
                <artifactId>metainf-services</artifactId>
                <!-- Keep this version in sync with dependency declaration above -->
                <version>1.11</version>
              </dependency>
            </annotationProcessorPaths>
            <proc>full</proc>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.5.4</version>
        </plugin>

        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <executions>
            <execution>
              <goals>
                <goal>properties</goal>
              </goals>
            </execution>
            <execution>
              <id>unpack-license</id>
              <phase>generate-resources</phase>
              <goals>
                <goal>copy</goal>
              </goals>
              <configuration>
                <artifactItems>
                  <artifactItem>
                    <groupId>org.opendaylight.odlparent</groupId>
                    <artifactId>odl-license</artifactId>
                    <version>14.1.4-SNAPSHOT</version>
                    <type>license</type>
                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                    <destFileName>LICENSE</destFileName>
                    <overWrite>false</overWrite>
                  </artifactItem>
                </artifactItems>
                <silent>true</silent>
              </configuration>
            </execution>
            <execution>
              <id>analyze-declarations</id>
              <goals>
                <goal>analyze-only</goal>
              </goals>
              <configuration>
                <failOnWarning>${odlparent.dependency.enforce}</failOnWarning>
                <ignoreNonCompile>true</ignoreNonCompile>
                <skip>${odlparent.dependency.skip}</skip>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.3.1</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>verify</phase>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.5.4</version>
          <configuration>
            <redirectTestOutputToFile>${maven.test.redirectTestOutputToFile}</redirectTestOutputToFile>
            <trimStackTrace>false</trimStackTrace>
            <argLine>@{argLine} -javaagent:${org.mockito:mockito-core:jar}</argLine>
          </configuration>
        </plugin>

        <!-- Third-party plugins, grouped by groupId, alpha-sorted by artifactId -->
        <plugin>
          <groupId>org.basepom.maven</groupId>
          <artifactId>duplicate-finder-maven-plugin</artifactId>
          <version>2.0.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>6.0.0</version>
          <extensions>true</extensions>
          <configuration>
            <instructions>
              <!-- Note the '-' for git.properties.. this is required because git-commit-id-plugin has <failOnNoGitDirectory>false,
                   so that the build doesn't fail if there is no .../.git/ - so git.properties is effectively optional;
                   and so the '-' there is needed to make the maven-bundle-plugin if that resource is not present.  -->
              <Include-Resource>{maven-resources},${project.build.directory}/classes/LICENSE,META-INF/git.properties=-${project.build.directory}/classes/META-INF/git.properties,META-INF/services=-${project.build.directory}/classes/META-INF/services</Include-Resource>

              <!-- Based on https://dev.eclipse.org/mhonarc/lists/equinox-dev/msg01088.html we do want
                   to generate Import-Service and Export-Service headers. -->
              <_removeheaders>Import-Service,Export-Service</_removeheaders>
            </instructions>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.karaf.tooling</groupId>
          <artifactId>karaf-maven-plugin</artifactId>
          <version>${karaf.version}</version>
          <extensions>true</extensions>
        </plugin>

        <plugin>
          <groupId>org.apache.servicemix.tooling</groupId>
          <artifactId>depends-maven-plugin</artifactId>
          <version>1.5.0</version>
          <executions>
            <execution>
              <id>generate-depends-file</id>
              <goals>
                <goal>generate-depends-file</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.gaul</groupId>
          <artifactId>modernizer-maven-plugin</artifactId>
          <version>3.2.0</version>
          <configuration>
            <javaVersion>${odlparent.modernizer.target}</javaVersion>
            <failOnViolations>${odlparent.modernizer.enforce}</failOnViolations>
            <skip>${odlparent.modernizer.skip}</skip>

            <exclusionPatterns>
              <!-- We are using Guava as per normal and we have grown a large body of code
                   around the patterns there. Furthermore the suggested replacements have
                   different behavior, hence we do NOT want to blindly migrate. Examples
                   include:

                   - Iterables, which we are widely use for efficient discovery of when
                     the Iterable is actually a Collection
              -->
              <exclusionPattern>com/google/common/collect/Iterables.*</exclusionPattern>
            </exclusionPatterns>
          </configuration>

          <executions>
            <execution>
              <id>modernizer</id>
              <phase>verify</phase>
              <goals>
                <goal>modernizer</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.karaf.tooling</groupId>
          <artifactId>karaf-services-maven-plugin</artifactId>
          <version>${karaf.version}</version>
          <executions>
            <execution>
              <id>service-metadata-generate</id>
              <phase>process-classes</phase>
              <goals>
                <goal>service-metadata-generate</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>4.8.6.7</version>
          <dependencies>
            <dependency>
              <groupId>com.github.spotbugs</groupId>
              <artifactId>spotbugs</artifactId>
              <version>4.8.6</version>
            </dependency>
            <dependency>
              <groupId>org.opendaylight.odlparent</groupId>
              <artifactId>spotbugs</artifactId>
              <version>14.1.4-SNAPSHOT</version>
            </dependency>
          </dependencies>
          <configuration>
            <plugins>
              <plugin>
                <groupId>jp.skypencil.findbugs.slf4j</groupId>
                <artifactId>bug-pattern</artifactId>
                <version>1.5.0</version>
              </plugin>
            </plugins>
            <!--
              Enables analysis which takes more memory but finds more bugs.
              If you run out of memory, changes the value of the effort element
              to 'Low'.
            -->
            <effort>Max</effort>
            <!-- Reports all bugs (other values are medium and max) -->
            <threshold>Low</threshold>
            <!-- Build doesn't fail if problems are found -->
            <failOnError>${odlparent.spotbugs.enforce}</failOnError>
            <skip>${odlparent.spotbugs.skip}</skip>
            <!-- References the excluded rules -->
            <excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
            <!-- Produces XML report -->
            <xmlOutput>true</xmlOutput>
            <!-- Configures the directory in which the XML report is created -->
            <spotbugsXmlOutputDirectory>${project.build.directory}/spotbugs</spotbugsXmlOutputDirectory>
          </configuration>
          <executions>
            <!--
              Ensures that SpotBugs inspects source code when project is compiled.
            -->
            <execution>
              <id>analyze-compile</id>
              <phase>compile</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>1.2.1</version>
        </plugin>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <versionRange>[1.0,)</versionRange>
                    <goals>
                      <goal>manifest</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <versionRange>[1.0.0,)</versionRange>
                    <goals>
                      <goal>enforce</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[2.10,)</versionRange>
                    <goals>
                      <goal>copy</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
                <!-- The plugin will eventually be removed, remove this too at that point -->
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <versionRange>[1.8,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.servicemix.tooling</groupId>
                    <artifactId>depends-maven-plugin</artifactId>
                    <versionRange>[1.2,)</versionRange>
                    <goals>
                      <goal>generate-depends-file</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <versionRange>[0.7.0,)</versionRange>
                    <goals>
                      <goal>prepare-agent</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>

                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.ops4j.pax.exam</groupId>
                    <artifactId>maven-paxexam-plugin</artifactId>
                    <versionRange>[1.2.4,)</versionRange>
                    <goals>
                      <goal>generate-depends-file</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>

                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.basepom.maven</groupId>
                    <artifactId>
                      duplicate-finder-maven-plugin
                    </artifactId>
                    <versionRange>[1.2.1,)</versionRange>
                    <goals>
                      <goal>check</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <configuration>
            <!-- Note: This exclusion list should match <sonar.exclusions>
                       property above -->
            <excludes>
              <exclude>**/gen/**</exclude>
              <exclude>**/generated-sources/**</exclude>
              <exclude>**/generated-test-sources/**</exclude>
              <exclude>**/yang-gen/**</exclude>
              <exclude>**/yang-gen-config/**</exclude>
              <exclude>**/yang-gen-sal/**</exclude>
              <exclude>**/yang-gen-code/**</exclude>
              <exclude>**/pax/**</exclude>
            </excludes>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.ops4j.pax.exam</groupId>
          <artifactId>maven-paxexam-plugin</artifactId>
          <version>1.2.4</version>
        </plugin>

        <!-- When updating this version, consider antl4-runtime above -->
        <plugin>
          <groupId>org.antlr</groupId>
          <artifactId>antlr4-maven-plugin</artifactId>
          <version>4.13.2</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-banned-dependencies</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedDependencies>
                  <message>Please always use mockito-core instead of mockito-all (see https://jira.opendaylight.org/browse/ODLPARENT-59), and spotbugs:annotations instead of findbugs:annotations</message>
                  <excludes>
                    <exclude>org.mockito:mockito-all</exclude>
                    <exclude>com.google.code.findbugs:annotations</exclude>
                  </excludes>
                </bannedDependencies>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.basepom.maven</groupId>
        <artifactId>duplicate-finder-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>find-duplicate-classpath-entries</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
            <!-- https://github.com/basepom/duplicate-finder-maven-plugin/wiki -->
            <failBuildInCaseOfConflict>false</failBuildInCaseOfConflict>
            <failBuildInCaseOfDifferentContentConflict>true</failBuildInCaseOfDifferentContentConflict>
            <failBuildInCaseOfEqualContentConflict>false</failBuildInCaseOfEqualContentConflict>
            <printEqualFiles>false</printEqualFiles>
            <!-- In addition to https://github.com/basepom/duplicate-finder-maven-plugin/wiki/Default%20ignored%20elements,
                 as explained on https://github.com/basepom/duplicate-finder-maven-plugin/wiki/Ignoring%20Dependencies%20and%20Resources,
                 we use resources not dependencies (see https://github.com/basepom/duplicate-finder-maven-plugin/wiki/Classpath%20Exceptions)
                 also ignore: -->
            <ignoredResourcePatterns>
              <ignoredResourcePattern>org/opendaylight/blueprint/.*\.xml$</ignoredResourcePattern>
              <ignoredResourcePattern>OSGI-OPT/bnd.bnd$</ignoredResourcePattern>
              <ignoredResourcePattern>WEB-INF/web.xml</ignoredResourcePattern>
              <ignoredResourcePattern>README.*$</ignoredResourcePattern>
              <ignoredResourcePattern>.*\.html$</ignoredResourcePattern>
              <ignoredResourcePattern>reference.conf</ignoredResourcePattern>
              <ignoredResourcePattern>.api_description</ignoredResourcePattern>
            </ignoredResourcePatterns>
            <ignoredDependencies>
              <ignoredDependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
              </ignoredDependency>
              <ignoredDependency>
                <groupId>org.opendaylight.odlparent</groupId>
                <artifactId>opendaylight-karaf-empty</artifactId>
              </ignoredDependency>
            </ignoredDependencies>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.gaul</groupId>
        <artifactId>modernizer-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
      </plugin>

      <!-- Jacoco / Sonar -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.opendaylight.odlparent</groupId>
        <artifactId>copy-files-plugin</artifactId>
        <version>14.1.4-SNAPSHOT</version>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-files</goal>
            </goals>
            <configuration>
              <globs>
                <glob>README*</glob>
                <glob>CONTRIBUTING*</glob>
                <glob>PROJECT_INFO.yaml</glob>
              </globs>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.6.0</version>
      </plugin>

      <!-- FIXME: activate this
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin-->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jdepend-maven-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>generate-no-fork</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
</project>

