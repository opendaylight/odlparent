<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright © 2016, 2017 Red Hat, Inc. and others.  All rights reserved.

 This program and the accompanying materials are made available under the
 terms of the Eclipse Public License v1.0 which accompanies this distribution,
 and is available at http://www.eclipse.org/legal/epl-v10.html
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--
         Internal parent for building and packaging single Karaf features *without tests*.

         We need this in odlparent to build features which are used in other parents with tests.
         Projects outside odlparent shouldn't use this, nor should modules in odlparent which can
         build with single-feature-parent.
    -->

    <parent>
        <groupId>org.opendaylight.odlparent</groupId>
        <artifactId>odlparent</artifactId>
        <version>1.9.0-SNAPSHOT</version>
        <relativePath>../odlparent</relativePath>
    </parent>

    <groupId>org.opendaylight.odlparent</groupId>
    <artifactId>untested-single-feature-parent</artifactId>
    <version>1.9.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>ODL :: odlparent :: ${project.artifactId}</name>

    <properties>
        <karaf.version>${karaf4.version}</karaf.version>
        <checkDependencyChange>false</checkDependencyChange>
        <failOnDependencyChange>false</failOnDependencyChange>
        <!-- Set this to true if your feature specifies its own feature dependency attributes -->
        <explicitFeatureDependencies>false</explicitFeatureDependencies>
        <!-- Set this to true if your feature specifies its own bundle dependency attributes -->
        <explicitBundleDependencies>false</explicitBundleDependencies>
    </properties>

    <build>
        <plugins>
            <plugin>
                <!-- This generates the META-INF/maven/dependencies.properties file
                     which is required by the versionAsInProject() used in SingleFeatureTest -->
                <groupId>org.apache.servicemix.tooling</groupId>
                <artifactId>depends-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.karaf.tooling</groupId>
                <artifactId>karaf-maven-plugin</artifactId>
                <version>${karaf4.plugin.version}</version>
                <extensions>true</extensions>
                <configuration combine.children="append">
                    <simplifyBundleDependencies>true</simplifyBundleDependencies>
                    <checkDependencyChange>${checkDependencyChange}</checkDependencyChange>
                    <logDependencyChanges>true</logDependencyChanges>
                    <failOnDependencyChange>${failOnDependencyChange}</failOnDependencyChange>
                    <excludedArtifactIds>
                        <!-- These artifacts are provided by our Karaf distribution -->
                        <!-- Aries Blueprint -->
                        <excludedArtifactId>org.apache.aries.blueprint.api</excludedArtifactId>
                        <excludedArtifactId>org.apache.aries.blueprint.core</excludedArtifactId>
                        <!-- Aries Quiesce -->
                        <excludedArtifactId>org.apache.aries.quiesce.api</excludedArtifactId>
                        <!-- jline -->
                        <excludedArtifactId>jline</excludedArtifactId>
                        <!-- SLF4J -->
                        <excludedArtifactId>slf4j-api</excludedArtifactId>
                        <excludedArtifactId>jcl-over-slf4j</excludedArtifactId>
                        <!-- sshd -->
                        <excludedArtifactId>sshd-core</excludedArtifactId>
                        <!-- Karaf artifacts -->
                        <!-- TODO Rework this once Karaf supports wildcards here -->
                        <excludedArtifactId>org.apache.karaf.jaas.config</excludedArtifactId>
                        <excludedArtifactId>org.apache.karaf.jaas.modules</excludedArtifactId>
                        <excludedArtifactId>org.apache.karaf.shell.console</excludedArtifactId>
                        <excludedArtifactId>org.apache.karaf.shell.core</excludedArtifactId>
                        <!-- OSGi -->
                        <excludedArtifactId>org.osgi.compendium</excludedArtifactId>
                        <excludedArtifactId>org.osgi.core</excludedArtifactId>
                        <excludedArtifactId>org.osgi.enterprise</excludedArtifactId>
                    </excludedArtifactIds>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- Post-process generated features to set dependency="true" by default on features -->
                        <id>force-feature-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <skip>${explicitFeatureDependencies}</skip>
                            <target>
                                <copy file="${project.build.directory}/feature/feature.xml"
                                      tofile="${project.build.directory}/feature/feature.xml.feature.orig"
                                      failonerror="false"/>
                                <replaceregexp flags="g">
                                    <fileset dir="${project.build.directory}" includes="feature/feature.xml"/>
                                    <regexp pattern="feature version=([^ ]+) prerequisite=([^ ]+) dependency=&quot;false&quot;"/>
                                    <substitution expression="feature version=\1 prerequisite=\2 dependency=&quot;true&quot;"/>
                                </replaceregexp>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Post-process generated features to set dependency="true" by default on external bundles -->
                        <id>force-bundle-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <skip>${explicitBundleDependencies}</skip>
                            <target>
                                <copy file="${project.build.directory}/feature/feature.xml"
                                      tofile="${project.build.directory}/feature/feature.xml.bundle.orig"
                                      failonerror="false"/>
                                <!-- The general idea here is that any bundle from outside the project should be a
                                     dependency (“outside the project” means “with a different groupId”) -->
                                <!-- Because regexp can’t represent “not”, we proceed in three steps -->
                                <!-- Step 1: find “our” bundles and rename them -->
                                <replaceregexp flags="g">
                                    <fileset dir="${project.build.directory}" includes="feature/feature.xml"/>
                                    <regexp pattern="bundle(.mvn:${project.groupId}/)"/>
                                    <substitution expression="bnudle\1"/>
                                </replaceregexp>
                                <!-- Step 2: add dependency="true" where necessary -->
                                <replaceregexp flags="g">
                                    <fileset dir="${project.build.directory}" includes="feature/feature.xml"/>
                                    <regexp pattern="bundle&gt;mvn:"/>
                                    <substitution expression="bundle dependency=&quot;true&quot;&gt;mvn:"/>
                                </replaceregexp>
                                <!-- Step 3: restore our bundles -->
                                <replaceregexp flags="g">
                                    <fileset dir="${project.build.directory}" includes="feature/feature.xml"/>
                                    <regexp pattern="bnudle"/>
                                    <substitution expression="bundle"/>
                                </replaceregexp>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!--
        Maven Site Configuration

        The following configuration is necessary for maven-site-plugin to
        correctly identify the correct deployment path for OpenDaylight Maven
        sites.
    -->
    <url>${odl.site.url}/${project.groupId}/${stream}/${project.artifactId}/</url>

    <distributionManagement>
        <site>
            <id>opendaylight-site</id>
            <url>${nexus.site.url}/${project.artifactId}/</url>
        </site>
    </distributionManagement>

</project>