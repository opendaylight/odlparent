<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright Â© 2016, 2017 Red Hat, Inc. and others.  All rights reserved.

 This program and the accompanying materials are made available under the
 terms of the Eclipse Public License v1.0 which accompanies this distribution,
 and is available at http://www.eclipse.org/legal/epl-v10.html
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--
         Internal parent for building and packaging single Karaf features *without tests*.

         We need this in odlparent to build features which are used in other parents with tests.
         Projects outside odlparent shouldn't use this, nor should modules in odlparent which can
         build with single-feature-parent.
    -->

    <parent>
        <groupId>org.opendaylight.odlparent</groupId>
        <artifactId>odlparent</artifactId>
        <version>7.0.4-SNAPSHOT</version>
        <relativePath>../odlparent</relativePath>
    </parent>

    <artifactId>untested-single-feature-parent</artifactId>
    <packaging>pom</packaging>
    <name>ODL :: odlparent :: ${project.artifactId}</name>

    <properties>
        <checkDependencyChange>false</checkDependencyChange>
        <failOnDependencyChange>false</failOnDependencyChange>
    </properties>

    <build>
        <plugins>
            <plugin>
                <!-- This generates the META-INF/maven/dependencies.properties file
                     which is required by the versionAsInProject() used in SingleFeatureTest -->
                <groupId>org.apache.servicemix.tooling</groupId>
                <artifactId>depends-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.karaf.tooling</groupId>
                <artifactId>karaf-maven-plugin</artifactId>
                <version>${karaf.version}</version>
                <extensions>true</extensions>
                <configuration combine.children="append">
                    <enableGeneration>true</enableGeneration>
                    <simplifyBundleDependencies>true</simplifyBundleDependencies>
                    <checkDependencyChange>${checkDependencyChange}</checkDependencyChange>
                    <logDependencyChanges>true</logDependencyChanges>
                    <failOnDependencyChange>${failOnDependencyChange}</failOnDependencyChange>
                    <excludedArtifactIds>
                        <!-- These artifacts are provided by our Karaf distribution. -->
                        <!-- Keep in synch with karaf parent minimal bootFeatures. -->
                        <!-- Aries Blueprint -->
                        <excludedArtifactId>org.apache.aries.blueprint.api</excludedArtifactId>
                        <excludedArtifactId>org.apache.aries.blueprint.core</excludedArtifactId>
                        <!-- Aries Quiesce -->
                        <excludedArtifactId>org.apache.aries.quiesce.api</excludedArtifactId>
                        <!-- jline -->
                        <excludedArtifactId>jline</excludedArtifactId>
                        <!-- SLF4J -->
                        <excludedArtifactId>slf4j-api</excludedArtifactId>
                        <excludedArtifactId>jcl-over-slf4j</excludedArtifactId>
                        <!-- Karaf artifacts -->
                        <!-- TODO Rework this once Karaf supports wildcards here -->
                        <excludedArtifactId>org.apache.karaf.jaas.config</excludedArtifactId>
                        <excludedArtifactId>org.apache.karaf.jaas.modules</excludedArtifactId>
                        <excludedArtifactId>org.apache.karaf.shell.console</excludedArtifactId>
                        <excludedArtifactId>org.apache.karaf.shell.core</excludedArtifactId>
                        <!-- OSGi -->
                        <excludedArtifactId>org.osgi.compendium</excludedArtifactId>
                        <excludedArtifactId>org.osgi.core</excludedArtifactId>
                        <excludedArtifactId>org.osgi.enterprise</excludedArtifactId>
                        <!-- Bouncy Castle -->
                        <excludedArtifactId>bcprov-jdk15on</excludedArtifactId>
                        <excludedArtifactId>bcprov-ext-jdk15on</excludedArtifactId>
                        <excludedArtifactId>bcpkix-jdk15on</excludedArtifactId>
                        <!-- JAXB -->
                        <excludedArtifactId>jaxb-api</excludedArtifactId>
                        <excludedArtifactId>jaxb-runtime</excludedArtifactId>
                        <excludedArtifactId>jakarta.xml.bind-api</excludedArtifactId>
                        <!-- javax.annotation -->
                        <excludedArtifactId>activation</excludedArtifactId>
                        <excludedArtifactId>jakarta.activation-api</excludedArtifactId>

                        <!-- Our slf4j logging markers -->
                        <excludedArtifactId>logging-markers</excludedArtifactId>
                    </excludedArtifactIds>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
          <plugins>
            <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
            <plugin>
              <groupId>org.eclipse.m2e</groupId>
              <artifactId>lifecycle-mapping</artifactId>
              <version>1.0.0</version>
              <configuration>
                <lifecycleMappingMetadata>
                  <pluginExecutions>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.apache.karaf.tooling</groupId>
                        <artifactId>karaf-maven-plugin</artifactId>
                        <versionRange>[4.1.5,)</versionRange>
                        <goals>
                          <goal>verify</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore></ignore>
                      </action>
                    </pluginExecution>
                  </pluginExecutions>
                </lifecycleMappingMetadata>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
    </build>

</project>
